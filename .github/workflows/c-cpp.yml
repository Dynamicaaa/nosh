name: C/C++ CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libreadline-dev cmake pkg-config \
                                libmbedtls-dev libargon2-dev

      - name: Configure CMake
        run: cmake -B build -S .

      - name: Build
        run: cmake --build build

      - name: Install
        run: sudo cmake --install build

      - name: Check binary exists
        run: test -f /usr/local/bin/nosh

      - name: Test version command
        run: |
          /usr/local/bin/nosh --version || true

  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Ensure Homebrew is installed
        run: |
          if ! command -v brew &> /dev/null; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)";
          fi

      - name: Install dependencies
        run: |
          brew install gcc readline cmake pkg-config mbedtls argon2

      - name: Configure CMake
        run: cmake -B build -S .
        env:
          LDFLAGS: ${{ env.LDFLAGS }}
          CPPFLAGS: ${{ env.CPPFLAGS }}
          PKG_CONFIG_PATH: ${{ env.PKG_CONFIG_PATH }}

      - name: Build
        run: cmake --build build

      - name: Install
        run: sudo cmake --install build

      - name: Check binary exists
        run: test -f /usr/local/bin/nosh

      - name: Test version command
        run: |
          /usr/local/bin/nosh --version || true

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          choco install -y mingw make cmake pkgconfiglite

      - name: Install vcpkg and dependencies
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg install mbedtls:x64-windows
          .\vcpkg install libargon2:x64-windows
          .\vcpkg integrate install

      - name: Set environment variables
        run: |
          $env:Path += ";$PWD\vcpkg\installed\x64-windows\bin"
          $env:INCLUDE = "$PWD\vcpkg\installed\x64-windows\include"
          $env:LIB = "$PWD\vcpkg\installed\x64-windows\lib"
          echo "INCLUDE=$env:INCLUDE" >> $GITHUB_ENV
          echo "LIB=$env:LIB" >> $GITHUB_ENV

      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE="$PWD/vcpkg/scripts/buildsystems/vcpkg.cmake" -DCMAKE_PREFIX_PATH="$PWD/vcpkg"
        env:
          INCLUDE: ${{ env.INCLUDE }}
          LIB: ${{ env.LIB }}

      - name: Build
        run: cmake --build build

      - name: Check binary exists
        run: if exist build\nosh.exe (echo Binary exists) else (exit 1)

      - name: Test version command
        run: .\build\nosh.exe --version || true

      - name: Uninstall
        run: cmake --build build --target uninstall